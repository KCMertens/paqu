##
## Dit bestand is in toml-formaat, zie: https://github.com/mojombo/toml
##
## Dit is de setup voor deze programma's:
##  - pqbuild
##  - pqclean
##  - pqconfig
##  - pqinit
##  - pqrmcorpus
##  - pqrmuser
##  - pqserve
##  - pqsetquota
##  - pqstatus
##  - pqupgrade

##
## Dit bestand word ingelezen als: $PAQU/setup.toml
##
## Logs worden opgeslagen als: $PAQU/pqserve.log (automatisch geroteerd)
## Overige data wordt opgeslagen in de directory: $PAQU/data
##
## De default voor $PAQU is: $HOME/.paqu
##

## Contact-informatie die verschijnt op de helppagina van PaQu.
contact = '''
Voor vragen en opmerkingen kun je contact opnemen met
<a href="mailto:help@paqu.domain.nl">help@paqu.domain.nl</a>.
'''

# De url waarop de server voor de buitenwereld beschikbaar is, zonodig met poortnummer.
url = "http://paqu.domain.nl:9876/"

# De interne poort waarop `pqserve` draait. Dit kan een ander nummer
# zijn dan de poort voor de buitenwereld, bijvoorbeeld bij gebruik van
# een proxy of Docker.
port = 80

# Het defaultcorpus. Dit moet een globaal corpus zijn, geïnstalleerd
# door de beheerder. Dit corpus wordt geselecteerd als de gebruiker zelf
# nog geen corpus heeft gekozen, en voor de voorbeelden in de uitleg.
# Dit moet dus een corpus zijn waarin voor alle voorbeelden minstens één
# resultaat is. Het kunnen ook meerdere corpora zijn, gescheiden door
# een spatie, dan wordt het eerste aanwezige corpus gebruikt.
default = "lassysmall alpinotreebank"

# Gegevens die gebruikt worden om mail naar gebruikers te sturen.
# De waarde van 'smtpserv' is verplicht met een poortnummer.
# Als 'smtpuser' en 'smtppass' leeg zijn is het een mailserver waarop
# niet ingelogd hoeft te worden (door degene die `pqserve` draait).
mailfrom = "maintainer@domain.nl"
smtpserv = "smtp.domain.nl:25"
smtpuser = ""
smtppass = ""

# De login-string waarmee verbinding gemaakt wordt met de MySQL/MariaDB-server.
# In de voorbeelden is 'paqu' de naam van de database van de gebruiker.
# Voorbeeld met server op een andere machine, met poortnummer:
# login = "username:password@tcp(www.myserver.nl:3306)/paqu"
# Voorbeeld met server op lokale machine:
login = "username:password@/paqu"
# Als dit een dollarteken is gevolg door de naam van een environment
# variabele dan wordt de waarde van die variabele later ingelezen.

# Elke table in MySQL/MariaDB krijgt dit als prefix, gevolgd door een
# underscore, om conflicten met andere toepassingen in dezelfde database
# te vermijden.
prefix = "pq"

# Maximum aantal corpora dat gelijktijdig wordt verwerkt.
# De verwerking van een corpus gebruikt ongeveer één processor voor 100%.
maxjob = 10

# Hoeveel data mag een gebruiker uploaden? In aantal tokens, geteld na
# splitsing van de data in tokens, opgeteld bij data die de gebruiker al
# heeft staan.
# Als de waarde 0 is geldt er geen limiet.
# Deze waarde wordt toegekend aan een gebruiker als ie voor het eerst
# inlogt. Verandering van deze waarde in de setup heeft dus alleen
# effect voor nieuwe gebruikers.
# Deze waarde kan achteraf per gebruiker worden aangepast met het
# programma `setquota`.
maxwrd = 1000000

# Maximum aantal zinnen bij het maken van een nieuw corpus op basis van bestaande corpora.
# Als de waarde 0 is geldt er geen limiet.
maxdup = 10000

# Laat gebruikers corpora downloaden in dact-formaat?
# Als dit aan staat gebruiken corpora ongeveer zeven keer zoveel schijfruimte.
# Als dit uit staat kunnen gebruikers nog wel corpora in dact-formaat uploaden,
# maar die corpora worden uitgepakt, en het dact-bestand wordt verwijderd.
# Het veranderen van deze optie van false naar true heeft alleen effect voor
# nieuwe corpora.
# Zonder dact kunnen gebruikers geen XPATH-query's uitvoeren op hun corpora.
dact = true

# Geëxpandeerde dact-bestanden gebruiken?
# Als dit aan staat worden sommige XPATH-query's veel eenvoudiger omdat
# lege index-nodes worden aangevuld met data uit de corresponderende
# niet-lege index-nodes.
# Met deze optie neemt de data op schijf ongeveer twee keer zoveel
# ruimte in.
dactx = true

# Universal Dependencies maken?
# Hiervoor is het programma pqudep nodig, dat niet gecompileerd kan
# worden als DbXml niet aanwezig is.
conllu = true

# Maximum aantal zinnen in een corpus dat beschikbaar is in het onderdeel SPOD.
# Als de waarde 0 is geldt er geen limiet.
maxspodlines = 1000000

# Maximum aantal jobs dat gelijktijdig uitgevoerd kan worden voor het onderdeel SPOD.
maxspodjob = 2

# De shell binary, inclusief path
sh = "/bin/sh"

# Het path naar alle hulpprogramma's die gebruikt worden door de server,
# met uitzondering van programma's onder ALPINO_PATH.
path = "/local/opt/paqu/bin:/bin:/usr/bin"

# De root-directory van Alpino (ALPINO_PATH). Ook als er een
# Alpino-server wordt gebruikt, is dit nodig, omdat de tokenizer van
# Alpino lokaal gebruikt moet worden.
alpino = "/local/opt/Alpino"

# Timeout voor Alpino voor de bewerking van één regel. In seconden.
# Het effect is niet exact als er een Alpino-server wordt gebruikt.
timeout = 900

# Maximum aantal tokens per regel. Kies 0 voor geen maximum.
# Wanneer een Alpino-server gebruikt wordt kan die een lagere limiet opleggen.
maxtokens = 100

# URL van een Alpino-server.
# Als dit leeg is wordt de lokale versie van Alpino gebruikt.
# De server moet deze API implementeren: https://github.com/rug-compling/alpino-api
# Een server kan in principe de data parallel verwerken, en dus veel
# sneller zijn dan wanneer je Alpino lokaal gebruikt.
alpinoserver = ""

# Een willekeurige tekst die wordt gebruikt voor versleuteling bij het
# inloggen.
# VERANDER DIT IN EEN ANDERE TEKST.
# Als je opnieuw de tekst verandert moet iedere gebruiker opnieuw
# inloggen.
secret = "Verander dit in een andere willekeurige tekst"

# TODO: uitleg over https met/zonder poortnummer

# Https gebruiken? In dat geval moet je zorgen voor de bestanden
# `cert.pem` en `key.pem` in de directory die aangegeven wordt door
# $PAQU. Laat het certificaat ondertekenen door een Certificaatautoriteit,
# zie: http://nl.wikipedia.org/wiki/Certificaatautoriteit
https = false

# Accepteer zowel https als http? Http wordt dan omgezet in een
# redirect naar https. Dit is enigszins experimenteel. Als dit
# problemen veroorzaakt, gebruik dan alleen de optie https.
httpdual = true

# Als extra veiligheidsmaatregel kan het remote ip-adres gebruikt worden
# als deel van de identificatie van de gebruiker. Een log-in is dan
# alleen geldig op hetzelfde ip-adres, en een onderschept cookie kan
# niet op een andere machine gebruikt worden.
# Nadeel is dat je als gebruiker opnieuw moet inloggen als je ip-adres
# verandert (bijvoorbeeld met een laptop die je meeneemt naar een ander
# netwerk).
# Als je https gebruikt is deze maatregel waarschijnlijk niet nodig.
remote = true

# Als `pqserve` via een proxy-server verbonden is met de buitenwereld
# heeft de optie `remote` geen effect, want het remote ip-adres is dan
# altijd dat van de proxy-server. In dat geval kun je de volgende optie
# op 'true' zetten, en dan wordt de waarde van de header X-Forwarded-For
# gebruikt.
forwarded = false

# Hoe lang mag een query via de website bezig zijn voordat een timeout
# wordt gegeven.
# In seconden.
# Als de waarde 0 is wordt er geen timeout gebruikt.
# Als een gebruiker de pagina voor de query verlaat dan wordt de query
# ook onderbroken.
querytimeout = 120

# Gebruik extern programma om in te loggen.
# Dit is de url van een externe website.
# Als dit is gedefinieerd vervangt het de ingebouwde manier van inloggen.
# Zie voorbeeld: extra/pqlogin.go
loginurl = ""

# Na hoeveel dagen moeten FoLiA-bestanden van gebruikers worden verwijderd?
foliadays = 30

# Wie mag de site bekijken?
# Selectie op basis van ip-adres.
# Als dit ontbreekt heeft iedereen toegang.
# Een adres is een ip-adres, een CIDR ip-adresmasker, of het woord "all".
# Voor CIDR, zie: http://nl.wikipedia.org/wiki/Classless_Inter-Domain_Routing .
# De EERSTE regel die matcht bepaalt of de bezoeker toegang heeft.
# Als geen enkele regel matcht heeft de gebruiker toegang.
# Als `pqserve` via een proxy-server met de buitenwereld is verbonden
# kun je dit niet gebruiken. In dat geval moet je de toegang in de
# proxy-server regelen.

[[view]]
allow = true
addr  = [ "127.0.0.1/8", "::1", "123.123.123.123" ]

[[view]]
allow = false
addr  = [ "all" ]

# Wie mag een account aanmaken, en dus zelf corpora uploaden?
# Selectie op basis van e-mailadres.
# Als dit ontbreekt mag iedereen een account aanmaken.
# Een mailadres is een reguliere expressie, zonder hoofdletters, of het woord "all".
# De EERSTE regel die matcht bepaalt of de bezoeker toegang heeft.
# Als geen enkele regel matcht heeft de gebruiker toegang.

[[access]]
allow = true
mail  = [ "@xs4all\\.nl$", "@rug\\.nl$" ]

[[access]]
allow = false
mail  = [ "all" ]

