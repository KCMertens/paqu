#
# Dit bestand is in toml-formaat, zie: https://github.com/mojombo/toml
#
# Gebruik:
#
#     pqfolia [-n int] [-m int] config.toml
#
#         -n: maximum aantal bestanden (voor testen)
#         -m: maximum aantal zinnen per bestand (voor testen)
#

################################################################
#
# INSTELLINGEN VOOR DE UITVOER
#

# Label waaronder naam van bronbestand in de uitvoer komt.
# Als dit leeg is, dan wordt het niet gebruikt.
File_src = "File.Src"

# Prefix van label waaronder delen van het path van het bronbestand in de uitvoer komen.
# Als dit leeg is, dan wordt het niet gebruikt.
File_path = "File.Path."

# Label waaronder naam van metadata in de uitvoer komt.
# Als dit leeg is, dan wordt het niet gebruikt.
Meta_src = "Meta.Src"

# Directory waar uitvoer wordt opgeslagen.
# Bestaande bestanden worden overschreven.
# Als dit leeg is gaat alle uitvoer naar stdout.
Output_dir = ""

# Alleen metadata uit deze lijst wordt gebruikt.
# Je kunt definities voor metadata toevoegen aan het eind van dit bestand.
Item_list = [
    "Land",
    "Leeftijd",
    "Maanden",
    "CGN.firstLang",
    "Uitgever",
    "Functie",
    "Titel",
    "Auteurs",
    "Niveau"
]

################################################################
#
# INFO OVER DE INVOER
#

# Directory van de FoLiA-bestanden. Bestanden zonder de extensie .xml
# worden genegeerd.
Data_dir = "data"

# Directory van de bestanden met metadata (indien aanwezig). Subpaden
# onder deze directory moeten overeenkomen met die in Data_dir.
Meta_dir = "metadata"

# Data moet ingedeeld zijn in zinnen, met <s> of eventueel met <utt>.
# Niet getokeniseerd:
#
#   <s><t>Dit is een zin.<t></s>
#
# Of wel getokeniseerd:
#
#   <s>
#     <w><t>Dit</t></w>
#     <w><t>is</t></w>
#     <w><t>een</t></w>
#     <w><t>zin</t></w>
#     <w><t>.</t></w>
#   </s>
Tokenized = true

################################################################
#
# DEFINITIES VOOR METADATA
#
# De mogelijk waardes voor Type zijn:
#
#     text  int  float  date  datetime
#
# In XPath-expressies kun je de string %speaker% gebruiken als
# plaatsvervanger voor de aanduiding van de huidige spreker in een
# dialoog.
#

# Voor EXTERNE METADATA met <metadata src> wordt de key XPath gebruikt.
# De waarde is een XPath-expressie.
#

[Items."Land"]
Type = "text"
XPath = "CMD/Components/Session/MDGroup/Location/Country"

[Items."Leeftijd"]
Type = "int"
XPath = "CMD/Components/Session/MDGroup/Actors/Actor[Code='%speaker%']/Age"

[Items."CGN.firstLang"]
Type = "text"
XPath = "CMD/Components/Session/MDGroup/Actors/Actor[Code='%speaker%']/Keys/Key[@Name='CGN.firstLang']"

# Voor INTERNE METADATA met <metadata><foreign-data> wordt de key XPath2 gebruikt
# De waarde is een XPath-expressie.
# De root voor de XPath-expressie is altijd 'foreign-data'.
#

[Items."Uitgever"]
Type = "text"
XPath2 = "foreign-data/publisher"

[Items."Functie"]
Type = "text"
XPath2 = "foreign-data/staff[@id='%speaker%']/role"

# Voor NATIVE METADATA met <metadata><meta> wordt de key ID gebruikt
# De waarde is die van het attribuut 'id' in <meta id="...">
#

[Items."Titel"]
Type = "text"
ID = "title"

[Items."Auteurs"]
Type = "text"
ID = "authors"

[Items."Niveau"]
Type = "text"
ID = "level"

# FILTERS
#
# Filter is een NAAMLOZE functie in JavaScript die de waarde uit de
# metadata omzet naar een andere vorm.
#
# Je kunt dit bijvoorbeeld gebruiken om een datum in de vorm "Jan 20, 2016"
# om te zetten naar de vorm "2016-01-20", het enige datumformaat dat PaQu
# kan verwerken.
#
# Filters kunnnen voor alledrie de soorten metadata gebruikt worden,
# extern, intern en native.
#
# In dit voorbeeld wordt een leeftijd uitgedrukt als "P1Y4M20D" of "P1Y4M"
# omgezet in een aantal maanden.
#

[Items."Maanden"]
Type = "float"
XPath2 = "foreign-data/[@id='%speaker%']/age"
Filter = '''
  function(s) {
    if (s.match(/^P([0-9]+)Y([0-9]+)M([0-9]+)D$/)) {
        return eval(s.replace(/P(.*)Y(.*)M(.*)D/, "12 * $1 + $2 + $3 / 31"));
    } else if (s.match(/^P([0-9]+)Y([0-9]+)M$/)) {
        return eval(s.replace(/P(.*)Y(.*)M/, "12 * $1 + $2"));
    } else {
        return s;
    }
  }
'''
